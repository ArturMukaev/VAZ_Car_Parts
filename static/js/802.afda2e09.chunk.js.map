{"version":3,"file":"static/js/802.afda2e09.chunk.js","mappings":"wNAEaA,EAAoBC,EAAAA,GAAAA,IAAU,gKAQ9BC,EAAgBD,EAAAA,GAAAA,KAAW,+IAE7B,SAACE,GAAK,OAAMA,EAAMC,SAAW,OAAS,OAAO,I,sDC+BxD,EAnCoB,SAACD,GACjB,MAA8CE,EAAAA,SAAgCC,EAAAA,EAAAA,SAAwB,eAA/FC,EAAe,KAAEC,EAAkB,KACpCC,EAAiBJ,EAAAA,SAAc,kBACjC,SAAC,KAAkB,WACf,SAACK,EAAA,EAAU,CAACC,KAAMR,EAAMS,QAAQC,OAAQC,KAAMX,EAAMS,QAAQE,QAC3C,GACtB,CAACX,EAAMS,UACV,OACI,UAACZ,EAAiB,YACd,SAACe,EAAA,EAAW,CAACC,QAASb,KACtB,UAAC,KAAkB,YACf,SAACD,EAAa,CACVe,QAAS,WACLT,EAAmBF,EAAAA,EAAAA,QACvB,EACAF,SAAUG,IAAoBD,EAAAA,EAAAA,QAAwB,SACzD,yCAAsB,MACvB,SAACJ,EAAa,CACVe,QAAS,WACLT,EAAmBF,EAAAA,EAAAA,YACvB,EACAF,SAAUG,IAAoBD,EAAAA,EAAAA,YAA4B,SAC7D,yDAEJC,IAAoBD,EAAAA,EAAAA,QACfG,GAEF,SAAC,KAAe,UACXN,EAAMe,gBAK3B,C","sources":["components/products/product_page/styled.ts","components/products/product_page/ProductPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledProductPage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 220px 30px auto;\r\n  @media (max-width: 580px) {\r\n    grid-template-rows: 250px 30px auto;\r\n  }\r\n`;\r\n\r\nexport const SectionOption = styled.span<{selected: boolean}>`\r\n  transition: all .2s ease-in-out;\r\n  color: ${(props) => (props.selected ? 'blue' : 'black')};\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {ProductCardProps, SelectedSection} from \"../../../types/componentsTypes\";\r\nimport {SectionOption, StyledProductPage} from \"./styled\";\r\nimport ProductCard from \"../product_card/ProductCard\";\r\nimport {StyledReviewsBlock} from \"../../reviews/styled\";\r\nimport ReviewCard from \"../../reviews/ReviewCard\";\r\nimport {StyledHeadingBlack, StyledTextBlack} from \"../../helpers\";\r\n\r\nconst ProductPage = (props: ProductCardProps): JSX.Element => {\r\n    const [selectedSection, setSelectedSection] = React.useState<SelectedSection>(SelectedSection.Reviews);\r\n    const ReviewsSection = React.useMemo(() => (\r\n        <StyledReviewsBlock>\r\n            <ReviewCard name={props.reviews.author} text={props.reviews.text}/>\r\n        </StyledReviewsBlock>\r\n    ), [props.reviews]);\r\n    return (\r\n        <StyledProductPage>\r\n            <ProductCard product={props}/>\r\n            <StyledHeadingBlack>\r\n                <SectionOption\r\n                    onClick={() => {\r\n                        setSelectedSection(SelectedSection.Reviews)\r\n                    }}\r\n                    selected={selectedSection === SelectedSection.Reviews}\r\n                >Отзывы</SectionOption> /\r\n                <SectionOption\r\n                    onClick={() => {\r\n                        setSelectedSection(SelectedSection.Description)\r\n                    }}\r\n                    selected={selectedSection === SelectedSection.Description}\r\n                > Описание</SectionOption>\r\n            </StyledHeadingBlack>\r\n            {selectedSection === SelectedSection.Reviews\r\n                ? ReviewsSection\r\n                :\r\n                <StyledTextBlack>\r\n                    {props.description}\r\n                </StyledTextBlack>\r\n            }\r\n        </StyledProductPage>\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n"],"names":["StyledProductPage","styled","SectionOption","props","selected","React","SelectedSection","selectedSection","setSelectedSection","ReviewsSection","ReviewCard","name","reviews","author","text","ProductCard","product","onClick","description"],"sourceRoot":""}